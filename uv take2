
#datasheet: https://cdn-shop.adafruit.com/datasheets/Si1145-46-47.pdf
----------------------------------------------------------------------

import smbus
import time

bus = smbus.SMBus(1) # connects to i2C channel 1 and GPIO i2C pins

SENSOR_ADDRESS = 0x60 # The address of the i2c device in hex without the r/w bit

COMMAND_REGISTER = 0X18    # write commands to this register (see pg. 22 of data sheet)
HW_KEY_REGISTER = 0X07
PARAM_WR = 0x17    # 'mailbox register for passing parameters from host to sequencer'
UV_INDEX = 0x2C     #aux_data0/uvindex0
UCOEF0 = 0x13
UCOEF1 = 0x14
UCOEF2 = 0x15
UCOEF3 = 0x16


def write_to_hwkey(bus):
     bus.write_byte_data(SENSOR_ADDRESS, HW_KEY_REGISTER, 0x17)

def enable_UV_coeff(bus, register, number):
     write_param = [number]
     bus.write_byte_data(SENSOR_ADDRESS, register, number)

def enable_UV_sensor(bus):     #write chlist byte to write parameter
     bus.write_byte_data(SENSOR_ADDRESS, PARAM_WR, 0xF0)
     
def auto_measure(bus):     #starts autonomous loop
     bus.write_byte_data(SENSOR_ADDRESS, COMMAND_REGISTER, 0xE)

def get_UV_reading(bus):
     raw_reading = bus.read_byte_data(SENSOR_ADDRESS, UV_INDEX)
     print(raw_reading)
     return raw_reading


write_to_hwkey(bus)
enable_UV_coeff(bus, UCOEF0, 0x29)
enable_UV_coeff(bus, UCOEF1, 0x89)
enable_UV_coeff(bus, UCOEF2, 0x02)
enable_UV_coeff(bus, UCOEF3, 0x00)
enable_UV_sensor(bus)
auto_measure(bus)

get_UV_reading(bus)




